{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchField/SearchField.js","App.js","helpers/debounce.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","highlightedText","highlightText","text","split","RegExp","map","part","i","key","toLowerCase","className","src","alt","href","defaultProps","MoviesList","movies","highlightSearchResult","movie","imdbId","SearchField","value","inputChangeHandler","htmlFor","type","id","placeholder","onChange","App","useState","searchValue","setInputValue","moviesFromServer","combinedMovies","setCombinedMovies","applySearchWithDebounce","f","delay","timer","clearTimeout","args","setTimeout","debounce","filter","includes","target","slice","ReactDOM","render","document","getElementById"],"mappings":"qvEAIaA,G,YAAY,SAAC,GAEpB,IADFC,EACC,EADDA,MAAOC,EACN,EADMA,YAAaC,EACnB,EADmBA,OAAQC,EAC3B,EAD2BA,QAASC,EACpC,EADoCA,gBAEjCC,EAAgB,SAACC,GACrB,OAAKF,EAISE,EAAKC,MAAM,IAAIC,OAAJ,WAAeJ,EAAf,KAAmC,OAE/CK,KAAI,SAACC,EAAMC,GAAP,OACf,kBAAC,WAAD,CAAUC,IAAG,UAAKF,EAAOC,IACtBD,EAAKG,gBAAkBT,EAAgBS,cACpC,0BAAMC,UAAU,oBAAoBJ,GACpCA,MATCJ,GAcX,OACE,yBAAKQ,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKb,EACLc,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cACVT,EAAcL,MAKrB,yBAAKc,UAAU,WACZT,EAAcJ,GACf,6BACA,uBAAGgB,KAAMd,GAAT,aAeVJ,EAAUmB,aAAe,CACvBjB,YAAa,IC/DR,IAAMkB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,sBAAX,OACxB,yBAAKP,UAAU,UACZM,EAAOX,KAAI,SAAAa,GAAK,OACf,kBAAC,EAAD,eACElB,gBAAiBiB,EACjBT,IAAKU,EAAMC,QACPD,SAkBZH,EAAWD,aAAe,CACxBE,OAAQ,IC5BH,IAAMI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,mBAAV,OACzB,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOa,QAAQ,eAAeb,UAAU,SAAxC,gBAGA,yBAAKA,UAAU,WACb,2BACEc,KAAK,OACLC,GAAG,eACHf,UAAU,QACVgB,YAAY,mBACZC,SAAUL,EACVD,MAAOA,QCTJO,EAAM,WAAO,IAAD,EACcC,mBAAS,IADvB,mBAChBC,EADgB,KACHC,EADG,OAEqBF,mBAASG,GAF9B,mBAEhBC,EAFgB,KAEAC,EAFA,KAIjBC,ECXgB,SAACC,EAAGC,GAC1B,IAAIC,EAEJ,OAAO,WACLC,aAAaD,GADK,2BAATE,EAAS,yBAATA,EAAS,gBAGlBF,EAAQG,WAAU,WAAV,GAAWL,EAAGC,GAAd,OAAwBG,KDKFE,EAAS,SAAArB,GAAK,OAAIa,EAChDF,EAAiBW,QACf,qBAAG/C,MAAH,EAAUC,aACPY,cAAcmC,SAASvB,SAE3B,KAQH,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEW,MAAOS,EACPR,mBAZa,SAAC,GAAgB,IAC9BD,EAD6B,EAAbwB,OACDxB,MAAMZ,cAAcqC,MAAM,EAAG,IAElDf,EAAcV,GACdc,EAAwBd,MAUpB,kBAAC,EAAD,CACEL,OAAQiB,EACRhB,sBAAuBa,KAG3B,yBAAKpB,UAAU,WAAf,uBE/BNqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2ade5aa2.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = (\n  { title, description, imgUrl, imdbUrl, highlightedText },\n) => {\n  const highlightText = (text) => {\n    if (!highlightedText) {\n      return text;\n    }\n\n    const parts = text.split(new RegExp(`(${highlightedText})`, 'gi'));\n\n    return parts.map((part, i) => (\n      <Fragment key={`${part + i}`}>\n        {part.toLowerCase() === highlightedText.toLowerCase()\n          ? <span className=\"highlighted-text\">{part}</span>\n          : part}\n      </Fragment>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">\n              {highlightText(title)}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {highlightText(description)}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  highlightedText: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, highlightSearchResult }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        highlightedText={highlightSearchResult}\n        key={movie.imdbId}\n        {...movie}\n      />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  highlightSearchResult: PropTypes.string.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchField = ({ value, inputChangeHandler }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          onChange={inputChangeHandler}\n          value={value}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nSearchField.propTypes = {\n  value: PropTypes.string.isRequired,\n  inputChangeHandler: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { SearchField } from './components/SearchField';\nimport { debounce } from './helpers/debounce';\n\nexport const App = () => {\n  const [searchValue, setInputValue] = useState('');\n  const [combinedMovies, setCombinedMovies] = useState(moviesFromServer);\n\n  const applySearchWithDebounce = debounce(value => setCombinedMovies(\n    moviesFromServer.filter(\n      ({ title, description }) => (title + description)\n        .toLowerCase().includes(value),\n    ),\n  ), 1000);\n  const searchMovies = ({ target }) => {\n    const value = target.value.toLowerCase().slice(0, 20);\n\n    setInputValue(value);\n    applySearchWithDebounce(value);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <SearchField\n          value={searchValue}\n          inputChangeHandler={searchMovies}\n        />\n        <MoviesList\n          movies={combinedMovies}\n          highlightSearchResult={searchValue}\n        />\n      </div>\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","export const debounce = (f, delay) => {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(f, delay, ...args);\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}